{"ast":null,"code":"import * as ActionsTypes from './ActionsTypes';\nimport { newdata } from '../data';\nexport const setLoading = payload => ({\n  type: ActionsTypes.DISH_LOADING,\n  payload\n});\nexport const dishes = (dishes, json) => ({\n  type: ActionsTypes.LOAD_DISH_SUCESS,\n  dishes,\n  posts: json.data.children.map(child => child.data)\n});\nexport const selectmeal = payload => ({\n  type: ActionsTypes.SELECT_MEAL,\n  payload\n});\nexport const selectRestaurant = payload => ({\n  type: ActionsTypes.SELECT_RESTAURANT,\n  payload\n});\nexport const setError = payload => ({\n  type: ActionsTypes.LOAD_DISH_FAIL,\n  payload\n});\nexport const loadDish = payload => ({\n  type: ActionsTypes.LOAD_DISH,\n  payload\n});\nexport const selectPeople = payload => ({\n  type: ActionsTypes.SELECT_PEOPLE,\n  payload\n});\nexport const getDish = () => {\n  return dispatch => {\n    dispatch(setLoading(false));\n    dispatch(selectmeal(newdata));\n    dispatch(selectRestaurant(newdata.dishes));\n    dispatch(dishes(newdata.dishes)); // let data=[],\n    // data.dishes.filter((item1,index)=>{\n    // if(data1.includes(item1,name)==false){\n    //     data1=[...data,item1.name]}})\n\n    fetch('../data').then(res => {\n      dispatch(setLoading(false));\n\n      if (res.data) {\n        dispatch(dishes());\n        dispatch(loadDish(newdata));\n      }\n    }); // .catch(e => {\n    //     ('Something went wrong');\n    //     dispatch(setLoading(false));\n    //     dispatch(setError(e));\n    // });\n  };\n};","map":{"version":3,"sources":["/home/rexweb/ex/src/store/Actions.js"],"names":["ActionsTypes","newdata","setLoading","payload","type","DISH_LOADING","dishes","json","LOAD_DISH_SUCESS","posts","data","children","map","child","selectmeal","SELECT_MEAL","selectRestaurant","SELECT_RESTAURANT","setError","LOAD_DISH_FAIL","loadDish","LOAD_DISH","selectPeople","SELECT_PEOPLE","getDish","dispatch","fetch","then","res"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,gBAA9B;AACA,SAAUC,OAAV,QAAyB,SAAzB;AAGA,OAAO,MAAMC,UAAU,GAAIC,OAAD,KAAc;AACpCC,EAAAA,IAAI,EAAEJ,YAAY,CAACK,YADiB;AAEpCF,EAAAA;AAFoC,CAAd,CAAnB;AAKP,OAAO,MAAMG,MAAM,GAAG,CAACA,MAAD,EAAQC,IAAR,MAAkB;AACpCH,EAAAA,IAAI,EAAEJ,YAAY,CAACQ,gBADiB;AAEpCF,EAAAA,MAFoC;AAGpCG,EAAAA,KAAK,EAAEF,IAAI,CAACG,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBC,KAAK,IAAIA,KAAK,CAACH,IAAtC;AAH6B,CAAlB,CAAf;AAMN,OAAO,MAAMI,UAAU,GAAEX,OAAD,KAAY;AAChCC,EAAAA,IAAI,EAACJ,YAAY,CAACe,WADc;AAEhCZ,EAAAA;AAFgC,CAAZ,CAAjB;AAKP,OAAO,MAAMa,gBAAgB,GAAEb,OAAD,KAAY;AACzCC,EAAAA,IAAI,EAAEJ,YAAY,CAACiB,iBADsB;AAEzCd,EAAAA;AAFyC,CAAZ,CAAvB;AAMR,OAAO,MAAMe,QAAQ,GAAIf,OAAD,KAAc;AAClCC,EAAAA,IAAI,EAAEJ,YAAY,CAACmB,cADe;AAElChB,EAAAA;AAFkC,CAAd,CAAjB;AAOP,OAAO,MAAMiB,QAAQ,GAAIjB,OAAD,KAAc;AAClCC,EAAAA,IAAI,EAAEJ,YAAY,CAACqB,SADe;AAElClB,EAAAA;AAFkC,CAAd,CAAjB;AAIP,OAAO,MAAMmB,YAAY,GAAEnB,OAAD,KAAY;AAClCC,EAAAA,IAAI,EAACJ,YAAY,CAACuB,aADgB;AAElCpB,EAAAA;AAFkC,CAAZ,CAAnB;AAIP,OAAO,MAAMqB,OAAO,GAAG,MAAM;AACzB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACvB,UAAU,CAAC,KAAD,CAAX,CAAR;AACAuB,IAAAA,QAAQ,CAACX,UAAU,CAACb,OAAD,CAAX,CAAR;AACAwB,IAAAA,QAAQ,CAACT,gBAAgB,CAACf,OAAO,CAACK,MAAT,CAAjB,CAAR;AACAmB,IAAAA,QAAQ,CAACnB,MAAM,CAACL,OAAO,CAACK,MAAT,CAAP,CAAR,CAJe,CAKX;AACA;AACA;AACA;;AAGJoB,IAAAA,KAAK,CAAC,SAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAI;AACTH,MAAAA,QAAQ,CAACvB,UAAU,CAAC,KAAD,CAAX,CAAR;;AACA,UAAI0B,GAAG,CAAClB,IAAR,EAAc;AACVe,QAAAA,QAAQ,CAACnB,MAAM,EAAP,CAAR;AACAmB,QAAAA,QAAQ,CAACL,QAAQ,CAACnB,OAAD,CAAT,CAAR;AAGH;AACJ,KATL,EAXe,CAqBX;AACA;AACA;AACA;AACA;AAEX,GA3BG;AA2BF,CA5BK","sourcesContent":["import * as ActionsTypes from './ActionsTypes'\nimport  { newdata } from '../data'\n\n\nexport const setLoading = (payload) => ({\n    type: ActionsTypes.DISH_LOADING,\n    payload\n})\n\nexport const dishes = (dishes,json) => ({\n    type: ActionsTypes.LOAD_DISH_SUCESS,\n    dishes,\n    posts: json.data.children.map(child => child.data),\n})\n\n export const selectmeal=(payload)=>({\n     type:ActionsTypes.SELECT_MEAL,\n     payload\n })\n\n export const selectRestaurant=(payload)=>({\n  type: ActionsTypes.SELECT_RESTAURANT,\n  payload\n\n })\n \nexport const setError = (payload) => ({\n    type: ActionsTypes.LOAD_DISH_FAIL,\n    payload\n})\n\n\n\nexport const loadDish = (payload) => ({\n    type: ActionsTypes.LOAD_DISH,\n    payload\n})\nexport const selectPeople=(payload)=>({\n    type:ActionsTypes.SELECT_PEOPLE,\n    payload\n})\nexport const getDish = () => {\n    return dispatch => {\n        dispatch(setLoading(false));\n        dispatch(selectmeal(newdata));\n        dispatch(selectRestaurant(newdata.dishes))\n        dispatch(dishes(newdata.dishes))\n            // let data=[],\n            // data.dishes.filter((item1,index)=>{\n            // if(data1.includes(item1,name)==false){\n            //     data1=[...data,item1.name]}})\n    \n        \n        fetch('../data')\n            .then(res => {\n                dispatch(setLoading(false));\n                if (res.data) {\n                    dispatch(dishes());\n                    dispatch(loadDish(newdata));\n                    \n    \n                }\n            })\n            // .catch(e => {\n            //     ('Something went wrong');\n            //     dispatch(setLoading(false));\n            //     dispatch(setError(e));\n            // });\n    \n}}"]},"metadata":{},"sourceType":"module"}
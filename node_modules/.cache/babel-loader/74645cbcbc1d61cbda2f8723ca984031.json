{"ast":null,"code":"import * as ActionsTypes from './ActionsTypes';\nexport const setLoading = payload => ({\n  type: ActionsTypes.DISH_LOADING,\n  payload\n});\nexport const setError = payload => ({\n  type: ActionsTypes.LOAD_DISH_FAIL,\n  payload\n});\nexport const setSuccess = () => ({\n  type: ActionsTypes.LOAD_DISH_SUCESS\n});\nexport const loadTrash = payload => ({\n  type: ActionsTypes.LOAD_DISH,\n  payload\n});\nexport const getDish = () => {\n  return dispatch => {\n    dispatch(setLoading(true));\n    fetch().then(res => {\n      dispatch(setLoading(false));\n\n      if (res.data) {\n        dispatch(setSuccess());\n        dispatch(loadTrash(res.data.data));\n      }\n    }).catch(e => {\n      error('Something went wrong');\n      dispatch(setLoading(false));\n      dispatch(setError(e));\n    });\n  };\n};","map":{"version":3,"sources":["/home/rexweb/ex/Dish/src/store/Actions.js"],"names":["ActionsTypes","setLoading","payload","type","DISH_LOADING","setError","LOAD_DISH_FAIL","setSuccess","LOAD_DISH_SUCESS","loadTrash","LOAD_DISH","getDish","dispatch","fetch","then","res","data","catch","e","error"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,gBAA9B;AAEA,OAAO,MAAMC,UAAU,GAAIC,OAAD,KAAc;AACpCC,EAAAA,IAAI,EAAEH,YAAY,CAACI,YADiB;AAEpCF,EAAAA;AAFoC,CAAd,CAAnB;AAKP,OAAO,MAAMG,QAAQ,GAAIH,OAAD,KAAc;AAClCC,EAAAA,IAAI,EAAEH,YAAY,CAACM,cADe;AAElCJ,EAAAA;AAFkC,CAAd,CAAjB;AAKP,OAAO,MAAMK,UAAU,GAAG,OAAO;AAC7BJ,EAAAA,IAAI,EAAEH,YAAY,CAACQ;AADU,CAAP,CAAnB;AAIP,OAAO,MAAMC,SAAS,GAAIP,OAAD,KAAc;AACnCC,EAAAA,IAAI,EAAEH,YAAY,CAACU,SADgB;AAEnCR,EAAAA;AAFmC,CAAd,CAAlB;AAIP,OAAO,MAAMS,OAAO,GAAG,MAAM;AACzB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACX,UAAU,CAAC,IAAD,CAAX,CAAR;AACAY,IAAAA,KAAK,GACAC,IADL,CACUC,GAAG,IAAI;AACTH,MAAAA,QAAQ,CAACX,UAAU,CAAC,KAAD,CAAX,CAAR;;AACA,UAAIc,GAAG,CAACC,IAAR,EAAc;AACVJ,QAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACAK,QAAAA,QAAQ,CAACH,SAAS,CAACM,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAV,CAAR;AAEH;AACJ,KARL,EASKC,KATL,CASWC,CAAC,IAAI;AACRC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACAP,MAAAA,QAAQ,CAACX,UAAU,CAAC,KAAD,CAAX,CAAR;AACAW,MAAAA,QAAQ,CAACP,QAAQ,CAACa,CAAD,CAAT,CAAR;AACH,KAbL;AAcH,GAhBD;AAiBH,CAlBM","sourcesContent":["import * as ActionsTypes from './ActionsTypes'\n\nexport const setLoading = (payload) => ({\n    type: ActionsTypes.DISH_LOADING,\n    payload\n})\n\nexport const setError = (payload) => ({\n    type: ActionsTypes.LOAD_DISH_FAIL,\n    payload\n})\n\nexport const setSuccess = () => ({\n    type: ActionsTypes.LOAD_DISH_SUCESS\n})\n\nexport const loadTrash = (payload) => ({\n    type: ActionsTypes.LOAD_DISH,\n    payload\n})\nexport const getDish = () => {\n    return dispatch => {\n        dispatch(setLoading(true));\n        fetch()\n            .then(res => {\n                dispatch(setLoading(false));\n                if (res.data) {\n                    dispatch(setSuccess());\n                    dispatch(loadTrash(res.data.data));\n\n                }\n            })\n            .catch(e => {\n                error('Something went wrong');\n                dispatch(setLoading(false));\n                dispatch(setError(e));\n            });\n    }\n}"]},"metadata":{},"sourceType":"module"}
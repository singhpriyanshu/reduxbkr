{"ast":null,"code":"var _jsxFileName = \"/home/rexweb/ex/src/MainTab.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Step1 from './Component/Step1';\nimport Step2 from './Component/Step2';\nimport Step3 from './Component/Step3';\nimport Review from './Component/Review';\nimport Lastpage from './Lastpage';\nimport { getDish } from './store/Actions';\nimport { Tabs } from 'antd';\nconst TabPane = Tabs.TabPane;\n\nclass MainTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonClick = next => {\n      this.setState({\n        next\n      });\n    };\n\n    this.handledishesChanges = (e, indexFrom) => {\n      let dishes = this.props.dishes;\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      dishes.filter((item, index) => {\n        if (index === indexFrom) {\n          item[name] = value;\n        }\n      }); // console.log('data :',dishes)\n\n      this.setState({\n        dishes\n      });\n    };\n\n    this.addMoreDishes = () => {\n      let dishes = this.props.dishes;\n      let data = [{\n        dishes: \"\",\n        servings: \"\"\n      }];\n      this.setState({\n        dishes: [...dishes, ...data]\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      // selectMeal:\"\",\n      selectPeople: \"\",\n      selectRestaurant: \"\",\n      // dishes:[{\n      //   dishes:\"\",\n      //   servings:\"\"\n      // }],\n      next: \"1\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getDish());\n  }\n\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          dishes = _this$props.dishes,\n          selectMeal = _this$props.selectMeal;\n    const _this$state = this.state,\n          selectPeople = _this$state.selectPeople,\n          selectRestaurant = _this$state.selectRestaurant,\n          next = _this$state.next;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Loading data...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, console.log(this.props.dishes), console.log(this.props.selectMeal), React.createElement(Tabs, {\n      activeKey: next.toString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"Step 1\",\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Step1, {\n      triggerParentUpdate: this.buttonClick,\n      selectMeal: selectMeal,\n      selectPeople: selectPeople,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      tab: \"Step 2\",\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Step2, {\n      triggerParentUpdate: this.buttonClick,\n      selectRestaurant: selectRestaurant,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      tab: \"Step 3\",\n      key: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Step3, {\n      triggerParentUpdate: this.buttonClick,\n      dishes: dishes,\n      handledishesChanges: this.handledishesChanges,\n      addMoreDishes: this.addMoreDishes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      tab: \"Review\",\n      key: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Review, {\n      triggerParentUpdate: this.buttonClick,\n      selectMeal: selectMeal,\n      selectPeople: selectPeople,\n      selectRestaurant: selectRestaurant,\n      dishes: dishes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      tab: \"Result\",\n      key: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Lastpage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes.dishes,\n    selectMeal: state.selectMeal.selectMeal,\n    loading: state.dishes.loading,\n    error: state.dishes.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDish: () => dispatch(getDish())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainTab);","map":{"version":3,"sources":["/home/rexweb/ex/src/MainTab.js"],"names":["React","Component","connect","Step1","Step2","Step3","Review","Lastpage","getDish","Tabs","TabPane","MainTab","constructor","props","buttonClick","next","setState","handledishesChanges","e","indexFrom","dishes","target","name","value","filter","item","index","addMoreDishes","data","servings","handleChange","state","selectPeople","selectRestaurant","componentDidMount","dispatch","render","error","loading","selectMeal","message","console","log","toString","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AAEA,SAASC,IAAT,QAAqB,MAArB;MAGQC,O,GAAYD,I,CAAZC,O;;AAER,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC5BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAoBjBC,WApBiB,GAoBJC,IAAD,IAAS;AACpB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAtBiB;;AAAA,SAyBlBE,mBAzBkB,GAyBE,CAACC,CAAD,EAAGC,SAAH,KAAe;AAAA,UAC5BC,MAD4B,GAClB,KAAKP,KADa,CAC5BO,MAD4B;AAAA,sBAEZF,CAAC,CAACG,MAFU;AAAA,UAE1BC,IAF0B,aAE1BA,IAF0B;AAAA,UAErBC,KAFqB,aAErBA,KAFqB;AAG3BH,MAAAA,MAAM,CAACI,MAAP,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC1B,YAAGA,KAAK,KAAGP,SAAX,EAAqB;AACnBM,UAAAA,IAAI,CAACH,IAAD,CAAJ,GAAWC,KAAX;AACD;AAEF,OALD,EAH2B,CAS3B;;AACC,WAAKP,QAAL,CAAc;AACbI,QAAAA;AADa,OAAd;AAIF,KAvCW;;AAAA,SAyClBO,aAzCkB,GAyCF,MAAK;AAAA,UACbP,MADa,GACH,KAAKP,KADF,CACbO,MADa;AAIlB,UAAIQ,IAAI,GAAG,CAAC;AACVR,QAAAA,MAAM,EAAC,EADG;AAEVS,QAAAA,QAAQ,EAAC;AAFC,OAAD,CAAX;AAKA,WAAKb,QAAL,CAAc;AACZI,QAAAA,MAAM,EAAC,CAAC,GAAGA,MAAJ,EAAW,GAAGQ,IAAd;AADK,OAAd;AAGF,KArDiB;;AAAA,SAuDlBE,YAvDkB,GAuDJZ,CAAD,IAAK;AACb,WAAKF,QAAL,CAAc;AACZ,SAACE,CAAC,CAACG,MAAF,CAASC,IAAV,GAAgBJ,CAAC,CAACG,MAAF,CAASE;AADb,OAAd;AAGD,KA3Dc;;AAEhB,SAAKQ,KAAL,GAAW;AACT;AACAC,MAAAA,YAAY,EAAC,EAFJ;AAGTC,MAAAA,gBAAgB,EAAC,EAHR;AAIT;AACA;AACA;AACA;AACAlB,MAAAA,IAAI,EAAC;AARI,KAAX;AAWF;;AACFmB,EAAAA,iBAAiB,GAAE;AAClB,SAAKrB,KAAL,CAAWsB,QAAX,CAAoB3B,OAAO,EAA3B;AACA;;AA6CC4B,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKvB,KAD5C;AAAA,UACCwB,KADD,eACCA,KADD;AAAA,UACQC,OADR,eACQA,OADR;AAAA,UACiBlB,MADjB,eACiBA,MADjB;AAAA,UACwBmB,UADxB,eACwBA,UADxB;AAAA,wBAEuC,KAAKR,KAF5C;AAAA,UAEEC,YAFF,eAEEA,YAFF;AAAA,UAEgBC,gBAFhB,eAEgBA,gBAFhB;AAAA,UAEiClB,IAFjC,eAEiCA,IAFjC;;AAGL,QAAIsB,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACG,OAAnB,CAAP;AACD;;AAED,QAAIF,OAAJ,EAAa;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACD;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAWO,MAAvB,CADJ,EAEIqB,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAW0B,UAAvB,CAFJ,EAKN,oBAAC,IAAD;AACC,MAAA,SAAS,EAAExB,IAAI,CAAC4B,QAAL,EADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGA,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,QAAb;AAAsB,MAAA,GAAG,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACA,MAAA,mBAAmB,EAAG,KAAK7B,WAD3B;AAEA,MAAA,UAAU,EAAEyB,UAFZ;AAGA,MAAA,YAAY,EAAEP,YAHd;AAIA,MAAA,YAAY,EAAE,KAAKF,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHA,EAYD,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,QAAb;AAAsB,MAAA,GAAG,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACA,MAAA,mBAAmB,EAAG,KAAKhB,WAD3B;AAEC,MAAA,gBAAgB,EAAEmB,gBAFnB;AAGC,MAAA,YAAY,EAAE,KAAKH,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAZC,EAoBD,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,QAAb;AAAsB,MAAA,GAAG,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AACC,MAAA,mBAAmB,EAAG,KAAKhB,WAD5B;AAEC,MAAA,MAAM,EAAEM,MAFT;AAGC,MAAA,mBAAmB,EAAE,KAAKH,mBAH3B;AAIC,MAAA,aAAa,EAAE,KAAKU,aAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CApBC,EA6BD,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,QAAb;AAAsB,MAAA,GAAG,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AACA,MAAA,mBAAmB,EAAG,KAAKb,WAD3B;AAEA,MAAA,UAAU,EAAEyB,UAFZ;AAGA,MAAA,YAAY,EAAEP,YAHd;AAIA,MAAA,gBAAgB,EAAGC,gBAJnB;AAKA,MAAA,MAAM,EAAEb,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CA7BC,EAuCF,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAC,QAAb;AAAsB,MAAA,GAAG,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAvCE,CALM,CADJ;AAmDH;;AA3H2B;;AA8HhC,MAAMwB,eAAe,GAAGb,KAAK,IAAI;AAC/B,SAAO;AACPX,IAAAA,MAAM,EAAEW,KAAK,CAACX,MAAN,CAAaA,MADd;AAEPmB,IAAAA,UAAU,EAACR,KAAK,CAACQ,UAAN,CAAiBA,UAFrB;AAGPD,IAAAA,OAAO,EAAEP,KAAK,CAACX,MAAN,CAAakB,OAHf;AAIPD,IAAAA,KAAK,EAAEN,KAAK,CAACX,MAAN,CAAaiB;AAJb,GAAP;AAMD,CAPD;;AASA,MAAMQ,kBAAkB,GAAGV,QAAQ,IAAG;AACpC,SAAM;AACP3B,IAAAA,OAAO,EAAC,MAAI2B,QAAQ,CAAC3B,OAAO,EAAR;AADb,GAAN;AAGD,CAJD;;AAKC,eAAeN,OAAO,CAAC0C,eAAD,EAAiBC,kBAAjB,CAAP,CAA4ClC,OAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Step1 from './Component/Step1'\nimport Step2 from './Component/Step2'\nimport Step3 from './Component/Step3'\nimport Review from './Component/Review'\nimport Lastpage from './Lastpage'\nimport {getDish} from './store/Actions'\n\nimport { Tabs } from 'antd';\n\n\nconst { TabPane } = Tabs;\n\nclass MainTab extends Component {\n    constructor(props){\n      super(props);\n      this.state={\n        // selectMeal:\"\",\n        selectPeople:\"\",\n        selectRestaurant:\"\",\n        // dishes:[{\n        //   dishes:\"\",\n        //   servings:\"\"\n        // }],\n        next:\"1\",\n    }\n    \n   }\n  componentDidMount(){\n   this.props.dispatch(getDish())\n  }\n  \n\n  \n     buttonClick=(next)=> {\n      this.setState({ next});\n    }\n\n   \n    handledishesChanges=(e,indexFrom)=>{\n      let {dishes} = this.props;\n        let {name,value} = e.target;\n            dishes.filter((item,index)=>{\n              if(index===indexFrom){\n                item[name]=value;\n              }\n                   \n            });\n            // console.log('data :',dishes)\n             this.setState({\n              dishes \n                  \n             });\n          }\n\n    addMoreDishes = () =>{\n       let {dishes} = this.props;\n       \n\n       let data = [{\n         dishes:\"\",\n         servings:\"\"\n       }]\n\n       this.setState({\n         dishes:[...dishes,...data]\n       });\n    } \n\n    handleChange=(e)=>{\n         this.setState({\n           [e.target.name]:e.target.value\n         })\n       }\n      \n    render() {\n      const { error, loading, dishes,selectMeal } = this.props;\n        const {selectPeople, selectRestaurant,next}=this.state;\n        if (error) {\n          return <div>Error! {error.message}</div>;\n        }\n    \n        if (loading) {\n          return <div>Loading data...</div>;\n        }\n        return (\n            <div>\n               {console.log(this.props.dishes)}\n               {console.log(this.props.selectMeal)}\n              {/* {dishes.map(dishes=><li key={dishes.id}>{dishes.name}</li>)} */}\n            \n      <Tabs \n       activeKey={next.toString()} >\n     \n      <TabPane tab=\"Step 1\" key=\"1\" >\n       <Step1 \n       triggerParentUpdate= {this.buttonClick} \n       selectMeal={selectMeal}\n       selectPeople={selectPeople}\n       handleChange={this.handleChange}\n       />\n      </TabPane>\n\n     <TabPane tab=\"Step 2\" key=\"2\">\n      <Step2 \n      triggerParentUpdate= {this.buttonClick}\n       selectRestaurant={selectRestaurant}\n       handleChange={this.handleChange}\n      />\n     </TabPane>\n\n     <TabPane tab=\"Step 3\" key=\"3\" >\n     <Step3 \n      triggerParentUpdate= {this.buttonClick} \n      dishes={dishes}\n      handledishesChanges={this.handledishesChanges}\n      addMoreDishes={this.addMoreDishes}\n     />\n     </TabPane>\n\n     <TabPane tab=\"Review\" key=\"4\" >\n      <Review \n      triggerParentUpdate= {this.buttonClick}\n      selectMeal={selectMeal}\n      selectPeople={selectPeople}\n      selectRestaurant ={selectRestaurant}\n      dishes={dishes}\n       />\n    </TabPane>\n\n    <TabPane tab=\"Result\" key=\"5\" >\n       <Lastpage/>\n       </TabPane>\n     </Tabs>\n     </div> \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n  dishes: state.dishes.dishes,\n  selectMeal:state.selectMeal.selectMeal,\n  loading: state.dishes.loading,\n  error: state.dishes.error\n};\n};\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n getDish:()=>dispatch(getDish())\n  };\n};\n export default connect(mapStateToProps,mapDispatchToProps)(MainTab)"]},"metadata":{},"sourceType":"module"}
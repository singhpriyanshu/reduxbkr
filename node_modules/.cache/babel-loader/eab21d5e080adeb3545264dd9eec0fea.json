{"ast":null,"code":"import _objectSpread from \"/home/rexweb/ex/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as ActionTypes from './ActionsTypes';\nimport { newdata } from '../data';\nconst initialState = {\n  dishes: [],\n  selectMeal: \"\",\n  selectRestaurant: \"\",\n  selectPeople: \"\" // loading: false,\n  // loaded: false,\n  //  error: {}\n\n};\n\nhandleChange = e => {\n  this.setState({\n    [e.target.name]: e.target.value\n  });\n}; // handledishesChanges=(e,indexFrom)=>{\n//     let {dishes} = this.props;\n//       let {name,value} = e.target;\n//           dishes.filter((item,index)=>{\n//             if(index===indexFrom){\n//               item[name]=value;\n//             }\n//           });\n//           // console.log('data :',dishes)\n//            this.setState({\n//             dishes:newdata \n//            });\n//         }\n\n\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.LOAD_DISH:\n      return _objectSpread({}, state, {\n        data: payload\n      });\n\n    case ActionTypes.LOAD_DISH_SUCESS:\n      return _objectSpread({}, state, {\n        loaded: true,\n        dishes: newdata\n      });\n\n    case ActionTypes.LOAD_DISH_FAIL:\n      return _objectSpread({}, state, {\n        error: payload\n      });\n\n    case ActionTypes.DISH_LOADING:\n      return _objectSpread({}, state, {\n        loading: newdata.dishes\n      });\n\n    case ActionTypes.SELECT_MEAL:\n      return _objectSpread({}, state, {\n        selectmeal: payload\n      });\n\n    case ActionTypes.SELECT_RESTAURANT:\n      return _objectSpread({}, state, {\n        selectRestaurant: payload\n      });\n\n    case ActionTypes.SELECT_PEOPLE:\n      return _objectSpread({}, state, {\n        selectPeople: payload\n      });\n    // return { ...state  }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/rexweb/ex/src/store/Reducer.js"],"names":["ActionTypes","newdata","initialState","dishes","selectMeal","selectRestaurant","selectPeople","handleChange","e","setState","target","name","value","state","type","payload","LOAD_DISH","data","LOAD_DISH_SUCESS","loaded","LOAD_DISH_FAIL","error","DISH_LOADING","loading","SELECT_MEAL","selectmeal","SELECT_RESTAURANT","SELECT_PEOPLE"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,UAAU,EAAC,EAFM;AAGjBC,EAAAA,gBAAgB,EAAC,EAHA;AAIjBC,EAAAA,YAAY,EAAC,EAJI,CAMjB;AACA;AACA;;AARiB,CAArB;;AAWAC,YAAY,GAAEC,CAAD,IAAK;AACd,OAAKC,QAAL,CAAc;AACZ,KAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAgBH,CAAC,CAACE,MAAF,CAASE;AADb,GAAd;AAGD,CAJH,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAeA,gBAAe,CAACC,KAAK,GAAGX,YAAT,EAAuB;AAAEY,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQD,IAAR;AAEA,SAAKd,WAAW,CAACgB,SAAjB;AACI,+BAAYH,KAAZ;AAAmBI,QAAAA,IAAI,EAAEF;AAAzB;;AAEJ,SAAKf,WAAW,CAACkB,gBAAjB;AACI,+BAAYL,KAAZ;AAAmBM,QAAAA,MAAM,EAAE,IAA3B;AAAiChB,QAAAA,MAAM,EAACF;AAAxC;;AAEJ,SAAKD,WAAW,CAACoB,cAAjB;AACI,+BAAYP,KAAZ;AAAmBQ,QAAAA,KAAK,EAAEN;AAA1B;;AAEH,SAAKf,WAAW,CAACsB,YAAjB;AACI,+BAAYT,KAAZ;AAAmBU,QAAAA,OAAO,EAAEtB,OAAO,CAACE;AAApC;;AAGL,SAAKH,WAAW,CAACwB,WAAjB;AACK,+BAAWX,KAAX;AAAiBY,QAAAA,UAAU,EAACV;AAA5B;;AAGL,SAAKf,WAAW,CAAC0B,iBAAjB;AACK,+BAAWb,KAAX;AAAiBR,QAAAA,gBAAgB,EAACU;AAAlC;;AAEL,SAAKf,WAAW,CAAC2B,aAAjB;AACQ,+BAAWd,KAAX;AAAiBP,QAAAA,YAAY,EAACS;AAA9B;AAIJ;;AAEJ;AACI,aAAOF,KAAP;AA9BJ;AAgCE,CAjCN","sourcesContent":["import * as ActionTypes from './ActionsTypes';\nimport { newdata } from '../data';\nconst initialState = {\n    dishes: [],\n    selectMeal:\"\",\n    selectRestaurant:\"\",\n    selectPeople:\"\"\n    \n    // loading: false,\n    // loaded: false,\n    //  error: {}\n}\n\nhandleChange=(e)=>{\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n \n// handledishesChanges=(e,indexFrom)=>{\n//     let {dishes} = this.props;\n//       let {name,value} = e.target;\n//           dishes.filter((item,index)=>{\n//             if(index===indexFrom){\n//               item[name]=value;\n//             }\n                 \n//           });\n//           // console.log('data :',dishes)\n//            this.setState({\n//             dishes:newdata \n                \n//            });\n//         }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case ActionTypes.LOAD_DISH:\n        return { ...state, data: payload }\n\n    case ActionTypes.LOAD_DISH_SUCESS:\n        return { ...state, loaded: true, dishes:newdata }\n    \n    case ActionTypes.LOAD_DISH_FAIL:\n        return { ...state, error: payload }\n\n     case ActionTypes.DISH_LOADING:\n         return { ...state, loading: newdata.dishes }\n\n         \n    case ActionTypes.SELECT_MEAL:\n         return {...state,selectmeal:payload}\n            \n\n    case ActionTypes.SELECT_RESTAURANT:\n         return {...state,selectRestaurant:payload}\n\n    case ActionTypes.SELECT_PEOPLE:\n            return {...state,selectPeople:payload}\n\n    \n    \n        // return { ...state  }\n    \n    default:\n        return state;\n    \n    }}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as ActionsTypes from './ActionsTypes';\nimport data, { newdata } from '../data';\nexport const setLoading = payload => ({\n  type: ActionsTypes.DISH_LOADING,\n  payload\n});\nexport const selectmeal = data => ({\n  type: ActionsTypes.SELECT_MEAL,\n  data\n});\nexport const selectRestaurant = payload => ({\n  type: ActionsTypes.SELECT_RESTAURANT,\n  payload\n});\nexport const setError = payload => ({\n  type: ActionsTypes.LOAD_DISH_FAIL,\n  payload\n});\nexport const setSuccess = () => ({\n  type: ActionsTypes.LOAD_DISH_SUCESS\n});\nexport const loadDish = payload => ({\n  type: ActionsTypes.LOAD_DISH,\n  payload\n});\nexport const selectPeople = payload => ({\n  type: ActionsTypes.SELECT_PEOPLE,\n  payload\n});\nexport const getDish = () => {\n  return dispatch => {\n    dispatch(setLoading(true));\n    dispatch(selectmeal(data));\n    dispatch(selectRestaurant(newdata)); // let data=[],\n    // data.dishes.filter((item1,index)=>{\n    // if(data1.includes(item1,name)==false){\n    //     data1=[...data,item1.name]}})\n  }; // fetch('../data')\n  //     .then(res => {\n  //         dispatch(setLoading(false));\n  //         if (res.data) {\n  //             dispatch(setSuccess());\n  //             dispatch(loadDish(data));\n  //         }\n  //     })\n  // .catch(e => {\n  //     ('Something went wrong');\n  //     dispatch(setLoading(false));\n  //     dispatch(setError(e));\n  // });\n};","map":{"version":3,"sources":["/home/rexweb/ex/src/store/Actions.js"],"names":["ActionsTypes","data","newdata","setLoading","payload","type","DISH_LOADING","selectmeal","SELECT_MEAL","selectRestaurant","SELECT_RESTAURANT","setError","LOAD_DISH_FAIL","setSuccess","LOAD_DISH_SUCESS","loadDish","LOAD_DISH","selectPeople","SELECT_PEOPLE","getDish","dispatch"],"mappings":"AAAA,OAAO,KAAKA,YAAZ,MAA8B,gBAA9B;AACA,OAAOC,IAAP,IAAeC,OAAf,QAA8B,SAA9B;AAGA,OAAO,MAAMC,UAAU,GAAIC,OAAD,KAAc;AACpCC,EAAAA,IAAI,EAAEL,YAAY,CAACM,YADiB;AAEpCF,EAAAA;AAFoC,CAAd,CAAnB;AAIN,OAAO,MAAMG,UAAU,GAAEN,IAAD,KAAS;AAC7BI,EAAAA,IAAI,EAACL,YAAY,CAACQ,WADW;AAE7BP,EAAAA;AAF6B,CAAT,CAAjB;AAKP,OAAO,MAAMQ,gBAAgB,GAAEL,OAAD,KAAY;AACzCC,EAAAA,IAAI,EAAEL,YAAY,CAACU,iBADsB;AAEzCN,EAAAA;AAFyC,CAAZ,CAAvB;AAMR,OAAO,MAAMO,QAAQ,GAAIP,OAAD,KAAc;AAClCC,EAAAA,IAAI,EAAEL,YAAY,CAACY,cADe;AAElCR,EAAAA;AAFkC,CAAd,CAAjB;AAKP,OAAO,MAAMS,UAAU,GAAG,OAAO;AAC7BR,EAAAA,IAAI,EAAEL,YAAY,CAACc;AADU,CAAP,CAAnB;AAIP,OAAO,MAAMC,QAAQ,GAAIX,OAAD,KAAc;AAClCC,EAAAA,IAAI,EAAEL,YAAY,CAACgB,SADe;AAElCZ,EAAAA;AAFkC,CAAd,CAAjB;AAIP,OAAO,MAAMa,YAAY,GAAEb,OAAD,KAAY;AAClCC,EAAAA,IAAI,EAACL,YAAY,CAACkB,aADgB;AAElCd,EAAAA;AAFkC,CAAZ,CAAnB;AAIP,OAAO,MAAMe,OAAO,GAAG,MAAM;AACzB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACjB,UAAU,CAAC,IAAD,CAAX,CAAR;AACAiB,IAAAA,QAAQ,CAACb,UAAU,CAACN,IAAD,CAAX,CAAR;AACAmB,IAAAA,QAAQ,CAACX,gBAAgB,CAACP,OAAD,CAAjB,CAAR,CAHe,CAIX;AACA;AACA;AACA;AAEH,GATL,CADyB,CAWrB;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACI;AACA;AACA;AACA;AACA;AAEX,CA3BM","sourcesContent":["import * as ActionsTypes from './ActionsTypes'\nimport data, { newdata } from '../data'\n\n\nexport const setLoading = (payload) => ({\n    type: ActionsTypes.DISH_LOADING,\n    payload\n})\n export const selectmeal=(data)=>({\n     type:ActionsTypes.SELECT_MEAL,\n     data\n })\n\n export const selectRestaurant=(payload)=>({\n  type: ActionsTypes.SELECT_RESTAURANT,\n  payload\n\n })\n \nexport const setError = (payload) => ({\n    type: ActionsTypes.LOAD_DISH_FAIL,\n    payload\n})\n\nexport const setSuccess = () => ({\n    type: ActionsTypes.LOAD_DISH_SUCESS\n})\n\nexport const loadDish = (payload) => ({\n    type: ActionsTypes.LOAD_DISH,\n    payload\n})\nexport const selectPeople=(payload)=>({\n    type:ActionsTypes.SELECT_PEOPLE,\n    payload\n})\nexport const getDish = () => {\n    return dispatch => {\n        dispatch(setLoading(true));\n        dispatch(selectmeal(data));\n        dispatch(selectRestaurant(newdata))\n            // let data=[],\n            // data.dishes.filter((item1,index)=>{\n            // if(data1.includes(item1,name)==false){\n            //     data1=[...data,item1.name]}})\n        \n        }\n        // fetch('../data')\n        //     .then(res => {\n        //         dispatch(setLoading(false));\n        //         if (res.data) {\n        //             dispatch(setSuccess());\n        //             dispatch(loadDish(data));\n                    \n    \n        //         }\n        //     })\n            // .catch(e => {\n            //     ('Something went wrong');\n            //     dispatch(setLoading(false));\n            //     dispatch(setError(e));\n            // });\n    \n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/home/rexweb/ex/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as ActionTypes from './ActionsTypes';\nimport { newdata } from '../data';\nconst initialState = {\n  dishes: [],\n  selectMeal: \"\",\n  selectRestaurant: \"\",\n  selectPeople: \"\" // loading: false,\n  // loaded: false,\n  //  error: {}\n\n};\n\nhandledishesChanges = (e, indexFrom) => {\n  let dishes = this.props.dishes;\n  let _e$target = e.target,\n      name = _e$target.name,\n      value = _e$target.value;\n  dishes.filter((item, index) => {\n    if (index === indexFrom) {\n      item[name] = value;\n    }\n  }); // console.log('data :',dishes)\n\n  this.setState({\n    dishes: newdata\n  });\n};\n\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.LOAD_DISH:\n      return _objectSpread({}, state, {\n        data: payload\n      });\n\n    case ActionTypes.LOAD_DISH_SUCESS:\n      return _objectSpread({}, state, {\n        loaded: true,\n        dishes: newdata\n      });\n\n    case ActionTypes.LOAD_DISH_FAIL:\n      return _objectSpread({}, state, {\n        error: payload\n      });\n\n    case ActionTypes.DISH_LOADING:\n      return _objectSpread({}, state, {\n        loading: newdata.dishes\n      });\n\n    case ActionTypes.SELECT_MEAL:\n      return _objectSpread({}, state, {\n        selectmeal: payload\n      });\n\n    case ActionTypes.SELECT_RESTAURANT:\n      return _objectSpread({}, state, {\n        selectRestaurant: payload\n      });\n\n    case ActionTypes.SELECT_PEOPLE:\n      return _objectSpread({}, state, {\n        selectPeople: payload\n      });\n    // return { ...state  }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/rexweb/ex/src/store/Reducer.js"],"names":["ActionTypes","newdata","initialState","dishes","selectMeal","selectRestaurant","selectPeople","handledishesChanges","e","indexFrom","props","target","name","value","filter","item","index","setState","state","type","payload","LOAD_DISH","data","LOAD_DISH_SUCESS","loaded","LOAD_DISH_FAIL","error","DISH_LOADING","loading","SELECT_MEAL","selectmeal","SELECT_RESTAURANT","SELECT_PEOPLE"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,UAAU,EAAC,EAFM;AAGjBC,EAAAA,gBAAgB,EAAC,EAHA;AAIjBC,EAAAA,YAAY,EAAC,EAJI,CAMjB;AACA;AACA;;AARiB,CAArB;;AAYAC,mBAAmB,GAAC,CAACC,CAAD,EAAGC,SAAH,KAAe;AAAA,MAC1BN,MAD0B,GAChB,KAAKO,KADW,CAC1BP,MAD0B;AAAA,kBAEVK,CAAC,CAACG,MAFQ;AAAA,MAExBC,IAFwB,aAExBA,IAFwB;AAAA,MAEnBC,KAFmB,aAEnBA,KAFmB;AAGzBV,EAAAA,MAAM,CAACW,MAAP,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC1B,QAAGA,KAAK,KAAGP,SAAX,EAAqB;AACnBM,MAAAA,IAAI,CAACH,IAAD,CAAJ,GAAWC,KAAX;AACD;AAEF,GALD,EAHyB,CASzB;;AACC,OAAKI,QAAL,CAAc;AACbd,IAAAA,MAAM,EAACF;AADM,GAAd;AAIF,CAdT;;AA6BA,gBAAe,CAACiB,KAAK,GAAGhB,YAAT,EAAuB;AAAEiB,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQD,IAAR;AAEA,SAAKnB,WAAW,CAACqB,SAAjB;AACI,+BAAYH,KAAZ;AAAmBI,QAAAA,IAAI,EAAEF;AAAzB;;AAEJ,SAAKpB,WAAW,CAACuB,gBAAjB;AACI,+BAAYL,KAAZ;AAAmBM,QAAAA,MAAM,EAAE,IAA3B;AAAiCrB,QAAAA,MAAM,EAACF;AAAxC;;AAEJ,SAAKD,WAAW,CAACyB,cAAjB;AACI,+BAAYP,KAAZ;AAAmBQ,QAAAA,KAAK,EAAEN;AAA1B;;AAEH,SAAKpB,WAAW,CAAC2B,YAAjB;AACI,+BAAYT,KAAZ;AAAmBU,QAAAA,OAAO,EAAE3B,OAAO,CAACE;AAApC;;AAGL,SAAKH,WAAW,CAAC6B,WAAjB;AACK,+BAAWX,KAAX;AAAiBY,QAAAA,UAAU,EAACV;AAA5B;;AAGL,SAAKpB,WAAW,CAAC+B,iBAAjB;AACK,+BAAWb,KAAX;AAAiBb,QAAAA,gBAAgB,EAACe;AAAlC;;AAEL,SAAKpB,WAAW,CAACgC,aAAjB;AACQ,+BAAWd,KAAX;AAAiBZ,QAAAA,YAAY,EAACc;AAA9B;AAIJ;;AAEJ;AACI,aAAOF,KAAP;AA9BJ;AAgCE,CAjCN","sourcesContent":["import * as ActionTypes from './ActionsTypes';\nimport { newdata } from '../data';\nconst initialState = {\n    dishes: [],\n    selectMeal:\"\",\n    selectRestaurant:\"\",\n    selectPeople:\"\"\n    \n    // loading: false,\n    // loaded: false,\n    //  error: {}\n}\n\n\nhandledishesChanges=(e,indexFrom)=>{\n    let {dishes} = this.props;\n      let {name,value} = e.target;\n          dishes.filter((item,index)=>{\n            if(index===indexFrom){\n              item[name]=value;\n            }\n                 \n          });\n          // console.log('data :',dishes)\n           this.setState({\n            dishes:newdata \n                \n           });\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case ActionTypes.LOAD_DISH:\n        return { ...state, data: payload }\n\n    case ActionTypes.LOAD_DISH_SUCESS:\n        return { ...state, loaded: true, dishes:newdata }\n    \n    case ActionTypes.LOAD_DISH_FAIL:\n        return { ...state, error: payload }\n\n     case ActionTypes.DISH_LOADING:\n         return { ...state, loading: newdata.dishes }\n\n         \n    case ActionTypes.SELECT_MEAL:\n         return {...state,selectmeal:payload}\n            \n\n    case ActionTypes.SELECT_RESTAURANT:\n         return {...state,selectRestaurant:payload}\n\n    case ActionTypes.SELECT_PEOPLE:\n            return {...state,selectPeople:payload}\n\n    \n    \n        // return { ...state  }\n    \n    default:\n        return state;\n    \n    }}"]},"metadata":{},"sourceType":"module"}
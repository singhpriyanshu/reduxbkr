{"ast":null,"code":"import _objectSpread from \"/home/rexweb/ex/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as ActionTypes from './ActionsTypes';\nconst initialState = {\n  dishes: [],\n  selectMeal: \"\" // loading: false,\n  // loaded: false,\n  //  error: {}\n\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.LOAD_DISH:\n      return _objectSpread({}, state, {\n        data: payload\n      });\n\n    case ActionTypes.LOAD_DISH_SUCESS:\n      return _objectSpread({}, state, {\n        loaded: true\n      });\n\n    case ActionTypes.SELECT_MEAL:\n      return _objectSpread({}, state, {\n        selectmeal: payload\n      });\n\n    case ActionTypes.LOAD_DISH_FAIL:\n      return _objectSpread({}, state, {\n        error: payload\n      });\n\n    case ActionTypes.DISH_LOADING:\n      return _objectSpread({}, state, {\n        loading: payload\n      });\n    // return { ...state  }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/rexweb/ex/src/store/Reducer.js"],"names":["ActionTypes","initialState","dishes","selectMeal","state","type","payload","LOAD_DISH","data","LOAD_DISH_SUCESS","loaded","SELECT_MEAL","selectmeal","LOAD_DISH_FAIL","error","DISH_LOADING","loading"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,gBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,UAAU,EAAC,EAFM,CAIjB;AACA;AACA;;AANiB,CAArB;AASA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuB;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQD,IAAR;AAEA,SAAKL,WAAW,CAACO,SAAjB;AACI,+BAAYH,KAAZ;AAAmBI,QAAAA,IAAI,EAAEF;AAAzB;;AAEJ,SAAKN,WAAW,CAACS,gBAAjB;AACI,+BAAYL,KAAZ;AAAmBM,QAAAA,MAAM,EAAE;AAA3B;;AAGA,SAAKV,WAAW,CAACW,WAAjB;AACI,+BAAWP,KAAX;AAAiBQ,QAAAA,UAAU,EAACN;AAA5B;;AAER,SAAKN,WAAW,CAACa,cAAjB;AACI,+BAAYT,KAAZ;AAAmBU,QAAAA,KAAK,EAAER;AAA1B;;AAEJ,SAAKN,WAAW,CAACe,YAAjB;AACI,+BAAYX,KAAZ;AAAmBY,QAAAA,OAAO,EAAEV;AAA5B;AAGA;;AAEJ;AACI,aAAOF,KAAP;AAtBJ;AAwBE,CAzBN","sourcesContent":["import * as ActionTypes from './ActionsTypes';\nconst initialState = {\n    dishes: [],\n    selectMeal:\"\",\n    \n    // loading: false,\n    // loaded: false,\n    //  error: {}\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case ActionTypes.LOAD_DISH:\n        return { ...state, data: payload }\n\n    case ActionTypes.LOAD_DISH_SUCESS:\n        return { ...state, loaded: true }\n    \n\n        case ActionTypes.SELECT_MEAL:\n            return {...state,selectmeal:payload}\n            \n    case ActionTypes.LOAD_DISH_FAIL:\n        return { ...state, error: payload }\n    \n    case ActionTypes.DISH_LOADING:\n        return { ...state, loading: payload }\n    \n    \n        // return { ...state  }\n    \n    default:\n        return state;\n    \n    }}"]},"metadata":{},"sourceType":"module"}